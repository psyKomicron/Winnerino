<Application
    x:Class="Winnerino.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Winnerino">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
                <!-- Other merged dictionaries here -->
                <!--<ResourceDictionary Source="Styles.xaml"/>-->
            </ResourceDictionary.MergedDictionaries>

            <!-- Other app resources here -->
            <x:Double x:Key="StackPanelButtonSpacing">10</x:Double>
            <x:Double x:Key="StackPanelDefaultSpacing">15</x:Double>
            <x:Double x:Key="HomeTitleFontSize">20</x:Double>
            <x:Double x:Key="IconButtonFontSize">16</x:Double>
            <x:Double x:Key="NavigationBackButtonIconSize">14</x:Double>
            <x:Double x:Key="ProgressBarHeight">14</x:Double>
            <x:Double x:Key="CaptionTextBlockOpacity">0.6</x:Double>

            <Color x:Key="AppTitleBarHoverColor">#8A8780</Color>

            <SolidColorBrush x:Key="PageBackgroundBrush" Color="#2D2D2E"/>

            <Thickness x:Key="StackPanelSettingMargin">30,0,0,0</Thickness>
            
            <!--#region Font icons -->
            <x:String x:Key="DirectoryFontIconGlyph">&#xe8d5;</x:String>
            <x:String x:Key="FileFontIconGlyph">&#xE8A5;</x:String>
            
            <x:String x:Key="FILE_ATTRIBUTE_ARCHIVE_IconGlyph">&#xF12B;</x:String>
            <x:String x:Key="FILE_ATTRIBUTE_COMPRESSED_IconGlyph">&#xE82D;</x:String>
            <x:String x:Key="FILE_ATTRIBUTE_DEVICE_IconGlyph">&#xE772;</x:String>
            <x:String x:Key="FILE_ATTRIBUTE_ENCRYPTED_IconGlyph">&#xec19;</x:String>
            <x:String x:Key="FILE_ATTRIBUTE_HIDDEN_IconGlyph">&#xE890;</x:String>
            <x:String x:Key="FILE_ATTRIBUTE_OFFLINE_IconGlyph">&#xE709;</x:String>
            <x:String x:Key="FILE_ATTRIBUTE_READONLY_IconGlyph">&#xE894;</x:String>
            <x:String x:Key="FILE_ATTRIBUTE_RECALL_ON_DATA_ACCESS_IconGlyph">&#xE753;</x:String>
            <x:String x:Key="FILE_ATTRIBUTE_RECALL_ON_OPEN_IconGlyph">&#xE753;</x:String>
            <x:String x:Key="FILE_ATTRIBUTE_SYSTEM_IconGlyph">&#xE770;</x:String>
            <x:String x:Key="FILE_ATTRIBUTE_TEMPORARY_IconGlyph">&#xE74D;</x:String>
            <x:String x:Key="FILE_ATTRIBUTE_VIRTUAL_IconGlyph">&#xE839;</x:String>

            <x:String x:Key="ListViewBulletGlyph">&#xe9ae;</x:String>
            <!--#endregion-->

            <!--#region Styles -->
            <Style TargetType="MenuFlyoutItem" x:Key="HeaderMenuFlyoutItemStyle" BasedOn="{StaticResource DefaultMenuFlyoutItemStyle}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuFlyoutItem">
                            <Grid x:Name="LayoutRoot" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="{StaticResource MenuFlyoutItemMargin}" CornerRadius="{TemplateBinding CornerRadius}">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemBackgroundPointerOver}" />
                                                <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPointerOver}" />
                                                <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPointerOver}" />
                                                <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver}" />

                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemBackgroundPressed}" />
                                                <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPressed}" />
                                                <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPressed}" />
                                                <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed}" />

                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemBackgroundDisabled}" />
                                                <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundDisabled}" />
                                                <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundDisabled}" />
                                                <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled}" />

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckPlaceholderStates">
                                        <VisualState x:Name="NoPlaceholder" />
                                        <VisualState x:Name="CheckPlaceholder">
                                            <VisualState.Setters>
                                                <Setter Target="TextBlock.Margin" Value="{StaticResource MenuFlyoutItemPlaceholderThemeThickness}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="IconPlaceholder">
                                            <VisualState.Setters>
                                                <Setter Target="TextBlock.Margin" Value="{StaticResource MenuFlyoutItemPlaceholderThemeThickness}" />
                                                <Setter Target="IconRoot.Visibility" Value="Visible" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckAndIconPlaceholder">
                                            <VisualState.Setters>
                                                <Setter Target="TextBlock.Margin" Value="{StaticResource MenuFlyoutItemDoublePlaceholderThemeThickness}" />
                                                <Setter Target="IconRoot.Margin" Value="{StaticResource MenuFlyoutItemPlaceholderThemeThickness}" />
                                                <Setter Target="IconRoot.Visibility" Value="Visible" />

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <!-- Narrow padding is only applied when flyout was invoked with pen, mouse or keyboard. -->
                                    <!-- Default padding is applied for all other cases including touch. -->
                                    <VisualStateGroup x:Name="PaddingSizeStates">
                                        <VisualState x:Name="DefaultPadding" />
                                        <VisualState x:Name="NarrowPadding">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Padding">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MenuFlyoutItemThemePaddingNarrow}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                        <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                        <VisualState x:Name="KeyboardAcceleratorTextVisible">
                                            <VisualState.Setters>
                                                <Setter Target="KeyboardAcceleratorTextBlock.Visibility" Value="Visible" />

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Viewbox 
                                    x:Name="IconRoot"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Width="16"
                                    Height="16"
                                    Visibility="Collapsed">
                                    <ContentPresenter  x:Name="IconContent" Content="{TemplateBinding Icon}"/>
                                </Viewbox>

                                <TextBlock x:Name="TextBlock"
                                    Text="{TemplateBinding Text}"
                                    TextTrimming="Clip"
                                    Foreground="{TemplateBinding Foreground}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <TextBlock 
                                    x:Name="KeyboardAcceleratorTextBlock" 
                                    Grid.Column="1" 
                                    Style="{ThemeResource CaptionTextBlockStyle}" 
                                    Text="{TemplateBinding KeyboardAcceleratorTextOverride}" 
                                    MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}"
                                    Margin="24,4,0,0" 
                                    Foreground="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForeground}" 
                                    HorizontalAlignment="Right" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                    Visibility="Collapsed" 
                                    AutomationProperties.AccessibilityView="Raw" />

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="MenuFlyoutPresenter" x:Key="AcrylicMenuFlyoutPresenterStyle" BasedOn="{StaticResource DefaultMenuFlyoutPresenterStyle}">
                <Setter Property="Background">
                    <Setter.Value>
                        <AcrylicBrush TintColor="{ThemeResource LayerOnAcrylicFillColorDefault}" TintLuminosityOpacity="0.016" TintOpacity="0.501"/>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="HomeButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                <Setter Property="Padding" Value="10"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="MaxHeight" Value="200"/>
            </Style>

            <Style x:Key="HomeTitleTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextBlockStyle}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="FileAttributeFontIconStyle" TargetType="FontIcon">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="DriveListViewItemStyle" TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
                <Setter Property="Padding" Value="0,0,0,0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Width" Value="90"/>
            </Style>
            
            <Style x:Key="FileListViewItemStyle" TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
                <Setter Property="Padding" Value="10,0,5,0"/>
                <Setter Property="Margin" Value="0"/>
            </Style>

            <Style x:Key="ExpanderSettingStyle" TargetType="Expander">
                <Setter Property="Margin" Value="0,0,0,10"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
            </Style>

            <Style x:Key="PathNavigationButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Height" Value="35"/>
            </Style>

            <Style x:Key="FlyoutButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Padding" Value="11,8,11,9"/>
            </Style>

            <Style x:Key="FlyoutSeparatorStyle" TargetType="Border">
                <Setter Property="Height" Value="1.3"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}"/>
                <Setter Property="Background" Value="{StaticResource MenuFlyoutSeparatorThemeBrush}"/>
            </Style>

            <Style x:Key="ButtonExpanderStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                <Setter Property="Margin" Value="0,0,0,10"/>
                <Setter Property="Padding" Value="{StaticResource ExpanderHeaderPadding}"/>
                <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}"/>
                <Setter Property="BorderThickness" Value="{StaticResource ExpanderBorderThickness}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}"/>
            </Style>

            <Style x:Key="GridExpanderStyle" TargetType="Grid">
                <Setter Property="Margin" Value="0,0,0,10"/>
                <Setter Property="Background" Value="{ThemeResource ExpanderBackground}"/>
                <Setter Property="Padding" Value="16,0,8,0"/>
                <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}"/>
                <Setter Property="BorderThickness" Value="{StaticResource ExpanderBorderThickness}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}"/>
                <Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}"/>
            </Style>
            
            <Style x:Key="NavigationBackButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Padding" Value="12,10"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
                <Setter Property="FontSize" Value="{StaticResource NavigationBackButtonIconSize}"/>
                <Setter Property="Content" Value="&#xe72b;"/>
            </Style>
            <!--#endregion-->

            <!--#region Data templates -->
            <DataTemplate x:Key="SettingsListViewDataTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <FontIcon Glyph="{StaticResource ListViewBulletGlyph}" Grid.Column="0"/>
                    <TextBlock Text="{Binding}" Grid.Column="1" TextWrapping="Wrap" IsTextSelectionEnabled="True"/>
                </Grid>
            </DataTemplate>
            <!--#endregion-->

        </ResourceDictionary>
    </Application.Resources>
</Application>
